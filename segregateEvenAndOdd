import java.util.*;
public class segregateEvenAndOdd {
    static Node head;
    static Node tail;
   static class Node{
        int data;
        Node next;
        Node prev;

        Node(int data){
            this.data=data;
            this.next=null;
            this.prev=null;

        }
    }
    public static void add(int data){
        Node newnode=new Node(data);
        if(head==null){
            head=tail=newnode;
            return;

        }

        newnode.next=head;
        head.prev=newnode;
        head=newnode;
    }
    public static void print(Node head){
        if(head==null){
            return;
        }
        while(head!=null){
            System.out.print(head.data+"->");
            head=head.next;
        }
        System.out.println();
    }
    // segregate basis on even and odd Node
    public static Node EvenAdnOdd(Node head){
        Node curr=head;
        Node temph=new Node(0);
        Node temp=temph;
        while(curr!=null){
            if((curr.data)%2==0){
                temp.next=new  Node(curr.data);
                temp=temp.next;
            }
            curr=curr.next;
        }
        curr=head;
        while(curr!=null){
            if((curr.data)%2!=0){
                 temp.next=new  Node(curr.data);;
                temp=temp.next;
            }

            curr = curr.next;
        }
        Node  ans=temph.next;
        return ans;
      
    }
    public static void main(String[] args) {
       Node head=new Node(13);
       head.next=new Node(23);
       head.next.next=new Node(32);
       head.next.next.next=new Node(45);
       head.next.next.next.next=new Node(65);
      print(head);
   Node h=EvenAdnOdd(head);
      print(h);
    }
}

    
