import java.util.*;
public class insertionOflinkedlist {
    private int size=0;

    insertionOflinkedlist(){
        this.size=0;
    }
    static Node head;
    class Node{
        String data;
        Node next;

        // constructor
        Node(String data){
            this.data=data;
            this.next=null;
            size++;
        }
    }
    // add first position
    public  void addfirst(String data){
        // agar List me koi node nhi hai to head ko hi newnode kr denge
        Node newNode=new Node(data);
        if(head==null){
            head=newNode;
            return;
        }
        newNode.next=head;
        head=newNode;
    }
    public  void addLast(String data){
        // agar List me koi node nhi hai to head ko hi newnode kr denge
        Node newNode=new Node(data);
        if(head==null){
            head=newNode;
            return;
        }
        Node currNode=head;
        while(currNode.next!=null){
            currNode=currNode.next;
        }
      currNode.next=newNode;
    }
    public  void DeleteFirst(){
        if(head==null){
            System.out.println("empty list");
            return;
        }
        size--;
        head=head.next;
    }

    // Delete last
    public void DeleteLast(){
        if(head==null){
            System.out.println("empty list");
            return;
        }

        // null ka next nhi hota isliye jb head==null ho jaye tb head ko null bana denge
        size--;
        if(head.next==null){
            head=null;
            return;
        }

        Node secondLastNode=head;
        Node lastNode=head.next;
        while(lastNode.next!=null){
            lastNode=lastNode.next;
            secondLastNode=secondLastNode.next;

        }
        secondLastNode.next=null;
    }
    public int getsize(){
        return size;
    }
    public static void print(){
        if(head==null){
            System.out.println("list is empty");
            return;
        }
        Node currNode=head;
        while(currNode!=null){
            System.out.print(currNode.data+" --->");
            currNode=currNode.next;
        }
        System.out.println("null");
    }
    public static void main(String args[]){
        insertionOflinkedlist list=new insertionOflinkedlist();
        list.addfirst("a");
        list.addfirst("is");
        list.addfirst("this");

        // list.print();

        list.addLast("list");
        list.print();

        list.DeleteFirst();
        list.print();

        list.DeleteLast();
        list.print();

       
        System.out.println( list.getsize());

        list.addLast("fg");
print();

System.out.println(list.getsize());
        
    }
}
